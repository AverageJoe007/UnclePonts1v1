{"remainingRequest":"E:\\My_Repos\\ups_1v1\\node_modules\\babel-loader\\lib\\index.js!E:\\My_Repos\\ups_1v1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\My_Repos\\ups_1v1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\My_Repos\\ups_1v1\\src\\components\\Sheet.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\My_Repos\\ups_1v1\\src\\components\\Sheet.vue","mtime":1546183011766},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { riotAPI } from '../main.js';\nexport default {\n  props: ['champ'],\n  data: function data() {\n    return {\n      level: 1,\n      tempList: null,\n      itemList: null,\n      item_1_id: null,\n      item_1: null\n    };\n  },\n  methods: {\n    showConsole: function showConsole() {\n      console.log(this.itemList[0].maps[1]);\n    },\n\n    /*         filterToSR() {\r\n                return itemList.index.maps[1] = true;\r\n            }, */\n    onChange: function onChange() {\n      // console.log(item_1_id);\n      this.item_1 = this.item; // console.log(this.champ);\n    }\n  },\n  computed: {\n    currentHP: function currentHP() {\n      return this.champ.stats.hp + (this.level - 1) * this.champ.stats.hpperlevel;\n    },\n    currentMP: function currentMP() {\n      return this.champ.stats.mp + (this.level - 1) * this.champ.stats.mpperlevel;\n    },\n    currentArmor: function currentArmor() {\n      return (this.champ.stats.armor + (this.level - 1) * this.champ.stats.armorperlevel).toFixed(3);\n    },\n    currentSpellBlock: function currentSpellBlock() {\n      return (this.champ.stats.spellblock + (this.level - 1) * this.champ.stats.spellblockperlevel).toFixed(3);\n    },\n    currentHpRegen: function currentHpRegen() {\n      return (this.champ.stats.hpregen + (this.level - 1) * this.champ.stats.hpregenperlevel).toFixed(3);\n    },\n    currentMpRegen: function currentMpRegen() {\n      return (this.champ.stats.mpregen + (this.level - 1) * this.champ.stats.mpregenperlevel).toFixed(3);\n    },\n    currentCrit: function currentCrit() {\n      if (this.champ.stats.crit == 0) {\n        return '';\n      } else return this.champ.stats.crit + (this.level - 1) * this.champ.stats.critlevel;\n    },\n    currentAttackDamage: function currentAttackDamage() {\n      return (this.champ.stats.attackdamage + (this.level - 1) * this.champ.stats.attackdamageperlevel).toFixed(3);\n    },\n    currentAttackSpeed: function currentAttackSpeed() {\n      return (this.champ.stats.attackspeed + (this.level - 1) * this.champ.stats.attackspeedperlevel).toFixed(3);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.axios.get(riotAPI.curPatch + 'data/en_US/item.json') // .then(response => console.log(response.data));\n    .then(function (response) {\n      return _this.itemList = response.data.data;\n    }); // .then(this.tempList = this.itemList.filterToSR()));\n  }\n};",{"version":3,"sources":["Sheet.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"Sheet\">\r\n        \r\n        <div>\r\n            <h4><label>Level: </label>\r\n            <input v-model.number=\"level\" type=\"number\" min=\"1\" max=\"18\" step=\"1\" value=\"1\" size=\"12\"></h4>\r\n\r\n            <!-- <h4>Stats: </h4>  -->\r\n        <div>\r\n            <table>\r\n                <tr>\r\n                    <td style=\"text-align:right\"> HP: </td>\r\n                    <td></td>\r\n                    <td> {{ currentHP }} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style=\"text-align:right\"> MP: </td>\r\n                    <td></td>\r\n                    <td> {{ currentMP }} </td>\r\n                </tr>\r\n                <br>\r\n                  <tr>\r\n                    <td style=\"text-align:right\"> HP regen: </td>\r\n                    <td></td>\r\n                    <td> {{ currentHpRegen }} </td>\r\n                </tr>\r\n                  <tr>\r\n                    <td style=\"text-align:right\"> MP regen: </td>\r\n                    <td></td>\r\n                    <td> {{ currentMpRegen }} </td>\r\n                </tr>\r\n                <br>\r\n                  <tr>\r\n                    <td style=\"text-align:right\"> Armor: </td>\r\n                    <td></td>   \r\n                    <td> {{ currentArmor }} </td>\r\n                </tr>\r\n                  <tr>\r\n                    <td style=\"text-align:right\"> Spell Block: </td>\r\n                    <td></td>\r\n                    <td> {{ currentSpellBlock }} </td>\r\n                </tr>\r\n                <br>\r\n                  <tr>\r\n                    <td style=\"text-align:right\"> Crit: </td>\r\n                    <td></td>\r\n                    <td> {{ currentCrit }} </td>\r\n                </tr>\r\n                  <tr>\r\n                    <td style=\"text-align:right\"> Attack Dmg </td>\r\n                    <td></td>\r\n                    <td> {{ currentAttackDamage }} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style=\"text-align:right\"> Attack Spd </td>\r\n                    <td></td>\r\n                    <td> {{ currentAttackSpeed }} </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n        <!-- <div clas=\"inv\">\r\n            <table>\r\n                <tr>\r\n                    <td></td>\r\n                </tr>\r\n\r\n            </table> -->\r\n        </div>\r\n\r\n        <br>\r\n        <br>\r\n\r\n        <span>\r\n            <label> Inventory Slot 1 </label>\r\n            <select v-model=\"item_1\" @change=\"onChange()\">\r\n                <option v-for=\"item in itemList\" :value=\"item.name\" :key=\"item.index\"> {{ item.name }} </option>\r\n                    </select>\r\n            \r\n        </span>\r\n\r\n        <button v-on:click=\"showConsole\"> Show item list </button>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {riotAPI} from '../main.js'\r\n\r\nexport default {\r\n    props: ['champ'],\r\n    \r\n    data() {\r\n        return {  \r\n            level: 1,\r\n            tempList: null,\r\n            itemList: null,\r\n            item_1_id: null,\r\n            item_1: null,\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        showConsole() {\r\n            console.log(this.itemList[0].maps[1]);\r\n        },\r\n                \r\n/*         filterToSR() {\r\n            return itemList.index.maps[1] = true;\r\n        }, */\r\n\r\n\r\n        onChange() {\r\n            // console.log(item_1_id);\r\n            this.item_1 = this.item;\r\n            // console.log(this.champ);\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        currentHP: function() {\r\n            return this.champ.stats.hp + ((this.level -1 ) * this.champ.stats.hpperlevel);\r\n        },\r\n        currentMP: function() {\r\n            return this.champ.stats.mp + ((this.level -1 ) * this.champ.stats.mpperlevel);\r\n        },\r\n        currentArmor: function() {\r\n            return (this.champ.stats.armor + ((this.level -1 ) * this.champ.stats.armorperlevel)).toFixed(3);\r\n        },\r\n        currentSpellBlock: function() {\r\n            return (this.champ.stats.spellblock + ((this.level -1 ) * this.champ.stats.spellblockperlevel)).toFixed(3);\r\n        },\r\n        currentHpRegen: function() {\r\n            return (this.champ.stats.hpregen + ((this.level -1 ) * this.champ.stats.hpregenperlevel)).toFixed(3);\r\n        },\r\n        currentMpRegen: function() {\r\n            return (this.champ.stats.mpregen + ((this.level -1 ) * this.champ.stats.mpregenperlevel)).toFixed(3);\r\n        },\r\n        currentCrit: function() {\r\n            if(this.champ.stats.crit == 0)\r\n            {\r\n                return '';\r\n            }\r\n            else return this.champ.stats.crit + ((this.level -1 ) * this.champ.stats.critlevel);\r\n        },\r\n        currentAttackDamage: function() {\r\n            return (this.champ.stats.attackdamage + ((this.level -1 ) * this.champ.stats.attackdamageperlevel)).toFixed(3);\r\n        },\r\n        currentAttackSpeed: function() {\r\n            return (this.champ.stats.attackspeed + ((this.level -1 ) * this.champ.stats.attackspeedperlevel)).toFixed(3);\r\n        },\r\n    },\r\n\r\n  \r\n\r\n    created() {        \r\n        this.axios\r\n            .get(riotAPI.curPatch + 'data/en_US/item.json')     \r\n            // .then(response => console.log(response.data));\r\n            .then(response => (this.itemList = response.data.data))\r\n            // .then(this.tempList = this.itemList.filterToSR()));\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n\r\ntable tr td:empty {\r\n    width: 20px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src\\components"}]}