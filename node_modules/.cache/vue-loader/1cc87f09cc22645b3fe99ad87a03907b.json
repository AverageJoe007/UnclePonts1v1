{"remainingRequest":"E:\\My_Repos\\ups_1v1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\My_Repos\\ups_1v1\\src\\components\\Sheet.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\My_Repos\\ups_1v1\\src\\components\\Sheet.vue","mtime":1545766464516},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\My_Repos\\ups_1v1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\n\r\nexport default {\r\n    props: ['champ'],\r\n    \r\n    data() {\r\n        return {  \r\n            level: null\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        currentHP: function() {\r\n            return this.champ.stats.hp + (this.level * this.champ.stats.hpperlevel);\r\n        },\r\n        currentMP: function() {\r\n            return this.champ.stats.mp + (this.level * this.champ.stats.mpperlevel);\r\n        },\r\n        currentArmor: function() {\r\n            return (this.champ.stats.armor + (this.level * this.champ.stats.armorperlevel)).toFixed(3);\r\n        },\r\n        currentSpellBlock: function() {\r\n            return (this.champ.stats.spellblock + (this.level * this.champ.stats.spellblockperlevel)).toFixed(3);\r\n        },\r\n        currentHpRegen: function() {\r\n            return (this.champ.stats.hpregen + (this.level * this.champ.stats.hpregenperlevel)).toFixed(3);\r\n        },\r\n        currentMpRegen: function() {\r\n            return (this.champ.stats.mpregen + (this.level * this.champ.stats.mpregenperlevel)).toFixed(3);\r\n        },\r\n        currentCrit: function() {\r\n            if(this.champ.stats.crit == 0)\r\n            {\r\n                return '';\r\n            }\r\n            else return this.champ.stats.crit + (this.level * this.champ.stats.critlevel);\r\n        },\r\n        currentAttackDamage: function() {\r\n            return (this.champ.stats.attackdamage + (this.level * this.champ.stats.attackdamageperlevel)).toFixed(3);\r\n        },\r\n        currentAttackSpeed: function() {\r\n            return (this.champ.stats.attackspeed + (this.level * this.champ.stats.attackspeedperlevel)).toFixed(3);\r\n        },\r\n    },\r\n}\r\n\r\n",{"version":3,"sources":["Sheet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sheet.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <div id=\"Sheet\">\r\n        \r\n        <div>\r\n            <h4><label>Level: </label>\r\n            <input v-model.number=\"level\" type=\"number\" min=\"1\" max=\"18\" step=\"1\" value=\"1\" size=\"12\"></h4>\r\n\r\n            <h4>Stats: </h4>\r\n\r\n            <table>\r\n                <tr>\r\n                    <td> HP: </td>\r\n                    <td> {{ currentHP }} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td> MP: </td>\r\n                    <td> {{ currentMP }} </td>\r\n                </tr>\r\n                <br>\r\n                  <tr>\r\n                    <td> HP regen: </td>\r\n                    <td> {{ currentHpRegen }} </td>\r\n                </tr>\r\n                  <tr>\r\n                    <td> MP regen: </td>\r\n                    <td> {{ currentMpRegen }} </td>\r\n                </tr>\r\n                <br>\r\n                  <tr>\r\n                    <td> Armor: </td>\r\n                    <td> {{ currentArmor }} </td>\r\n                </tr>\r\n                  <tr>\r\n                    <td> Spell Block: </td>\r\n                    <td> {{ currentSpellBlock }} </td>\r\n                </tr>\r\n                <br>\r\n                  <tr>\r\n                    <td> Crit: </td>\r\n                    <td> {{ currentCrit }} </td>\r\n                </tr>\r\n                  <tr>\r\n                    <td> Attack Dmg </td>\r\n                    <td> {{ currentAttackDamage }} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td> Attack Spd </td>\r\n                    <td> {{ currentAttackSpeed }} </td>\r\n                </tr>\r\n            </table>\r\n\r\n        </div>\r\n\r\n        <div id=\"inv\">\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    props: ['champ'],\r\n    \r\n    data() {\r\n        return {  \r\n            level: null\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        currentHP: function() {\r\n            return this.champ.stats.hp + (this.level * this.champ.stats.hpperlevel);\r\n        },\r\n        currentMP: function() {\r\n            return this.champ.stats.mp + (this.level * this.champ.stats.mpperlevel);\r\n        },\r\n        currentArmor: function() {\r\n            return (this.champ.stats.armor + (this.level * this.champ.stats.armorperlevel)).toFixed(3);\r\n        },\r\n        currentSpellBlock: function() {\r\n            return (this.champ.stats.spellblock + (this.level * this.champ.stats.spellblockperlevel)).toFixed(3);\r\n        },\r\n        currentHpRegen: function() {\r\n            return (this.champ.stats.hpregen + (this.level * this.champ.stats.hpregenperlevel)).toFixed(3);\r\n        },\r\n        currentMpRegen: function() {\r\n            return (this.champ.stats.mpregen + (this.level * this.champ.stats.mpregenperlevel)).toFixed(3);\r\n        },\r\n        currentCrit: function() {\r\n            if(this.champ.stats.crit == 0)\r\n            {\r\n                return '';\r\n            }\r\n            else return this.champ.stats.crit + (this.level * this.champ.stats.critlevel);\r\n        },\r\n        currentAttackDamage: function() {\r\n            return (this.champ.stats.attackdamage + (this.level * this.champ.stats.attackdamageperlevel)).toFixed(3);\r\n        },\r\n        currentAttackSpeed: function() {\r\n            return (this.champ.stats.attackspeed + (this.level * this.champ.stats.attackspeedperlevel)).toFixed(3);\r\n        },\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n\r\n</style>"]}]}